{"ast":null,"code":"var _jsxFileName = \"D:\\\\PHARMACY-FRONTEND-WEBSITE\\\\PHARMACY-FRONTEND-WEBSITE\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ClerkProvider, SignIn, SignUp, SignedIn, SignedOut } from \"@clerk/clerk-react\";\nimport { BrowserRouter, Routes, Route, useHistory } from \"react-router-dom\";\n// import ProtectedPage from \"./ProtectedPage\";\n// import Dashboard from \"./containers/Dashboard\";\n// import Sidebar from \"./components/Sidebar\";\n// import Customer from \"./containers/Customer\";\n// import Sales from \"./containers/Sales\";\n// import Inventory from \"./containers/Inventory\";\n// import { createRoot } from \"react-dom/client\";\n// import { AuthProvider } from \"./containers/AuthContext\";\n\n// if (!process.env.REACT_APP_CLERK_PUBLISHABLE_KEY) {\n//   throw new Error(\"Missing Publishable Key\");\n// }\n\n// Import your publishable key\n// const clerkPubKey = process.env.REACT_APP_CLERK_PUBLISHABLE_KEY;\n// {\n//   console.log(clerkPubKey);\n// }\n\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\n// const ClerkWithRoutes = () => {\n//   const navigate = useNavigate();\n\n//   return (\n//     <>\n//       <ClerkProvider\n//         publishableKey={clerkPubKey}\n//         navigate={(to) => navigate(to)}\n//       >\n//         <Routes>\n//           <Route path=\"/\" element={<Sidebar />} />\n//           <Route\n//             path=\"/sign-in/*\"\n//             element={\n//               <SignIn\n//                 // redirectUrl={\"/sidebar\"}\n//                 routing=\"path\"\n//                 path=\"/sign-in\"\n//                 hideBranding\n//               />\n//             }\n//           />\n//           <Route\n//             path=\"/sign-up/*\"\n//             element={\n//               <SignUp\n//                 // redirectUrl={\"/sidebar\"}\n//                 routing=\"path\"\n//                 path=\"/sign-up\"\n//                 hideBranding\n//               />\n//             }\n//           />\n//           <Route\n//             path=\"/sidebar\"\n//             element={\n//               <>\n//                 <SignedIn>\n//                   <ProtectedPage />\n//                 </SignedIn>\n//                 <SignedOut>\n//                   <ProtectedPage />\n//                 </SignedOut>\n//               </>\n//             }\n//           />\n\n//           <Route path=\"/dashboard\" element={<Dashboard />} />\n//           <Route path=\"/customer\" element={<Customer />} />\n//           <Route path=\"/sales\" element={<Sales />} />\n//           <Route path=\"/inventories\" element={<Inventory />} />\n//         </Routes>\n//       </ClerkProvider>\n//     </>\n//   );\n// };\n\n// Rendering the React application using ReactDOM.render\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 94,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","ClerkProvider","SignIn","SignUp","SignedIn","SignedOut","BrowserRouter","Routes","Route","useHistory","jsxDEV","_jsxDEV","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["D:/PHARMACY-FRONTEND-WEBSITE/PHARMACY-FRONTEND-WEBSITE/src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport {\r\n  ClerkProvider,\r\n  SignIn,\r\n  SignUp,\r\n  SignedIn,\r\n  SignedOut,\r\n} from \"@clerk/clerk-react\";\r\nimport { BrowserRouter, Routes, Route, useHistory } from \"react-router-dom\";\r\n// import ProtectedPage from \"./ProtectedPage\";\r\n// import Dashboard from \"./containers/Dashboard\";\r\n// import Sidebar from \"./components/Sidebar\";\r\n// import Customer from \"./containers/Customer\";\r\n// import Sales from \"./containers/Sales\";\r\n// import Inventory from \"./containers/Inventory\";\r\n// import { createRoot } from \"react-dom/client\";\r\n// import { AuthProvider } from \"./containers/AuthContext\";\r\n\r\n// if (!process.env.REACT_APP_CLERK_PUBLISHABLE_KEY) {\r\n//   throw new Error(\"Missing Publishable Key\");\r\n// }\r\n\r\n// Import your publishable key\r\n// const clerkPubKey = process.env.REACT_APP_CLERK_PUBLISHABLE_KEY;\r\n// {\r\n//   console.log(clerkPubKey);\r\n// }\r\n\r\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\n// const ClerkWithRoutes = () => {\r\n//   const navigate = useNavigate();\r\n\r\n//   return (\r\n//     <>\r\n//       <ClerkProvider\r\n//         publishableKey={clerkPubKey}\r\n//         navigate={(to) => navigate(to)}\r\n//       >\r\n//         <Routes>\r\n//           <Route path=\"/\" element={<Sidebar />} />\r\n//           <Route\r\n//             path=\"/sign-in/*\"\r\n//             element={\r\n//               <SignIn\r\n//                 // redirectUrl={\"/sidebar\"}\r\n//                 routing=\"path\"\r\n//                 path=\"/sign-in\"\r\n//                 hideBranding\r\n//               />\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/sign-up/*\"\r\n//             element={\r\n//               <SignUp\r\n//                 // redirectUrl={\"/sidebar\"}\r\n//                 routing=\"path\"\r\n//                 path=\"/sign-up\"\r\n//                 hideBranding\r\n//               />\r\n//             }\r\n//           />\r\n//           <Route\r\n//             path=\"/sidebar\"\r\n//             element={\r\n//               <>\r\n//                 <SignedIn>\r\n//                   <ProtectedPage />\r\n//                 </SignedIn>\r\n//                 <SignedOut>\r\n//                   <ProtectedPage />\r\n//                 </SignedOut>\r\n//               </>\r\n//             }\r\n//           />\r\n\r\n//           <Route path=\"/dashboard\" element={<Dashboard />} />\r\n//           <Route path=\"/customer\" element={<Customer />} />\r\n//           <Route path=\"/sales\" element={<Sales />} />\r\n//           <Route path=\"/inventories\" element={<Inventory />} />\r\n//         </Routes>\r\n//       </ClerkProvider>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// Rendering the React application using ReactDOM.render\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      {/* Wrap your entire app with AuthProvider */}\r\n      {/* <BrowserRouter> */}\r\n      <App />\r\n      {/* </BrowserRouter> */}\r\n    {/* </AuthProvider> */}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SACEC,aAAa,EACbC,MAAM,EACNC,MAAM,EACNC,QAAQ,EACRC,SAAS,QACJ,oBAAoB;AAC3B,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,UAAU,QAAQ,kBAAkB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAb,QAAQ,CAACc,MAAM,eACbD,OAAA,CAACd,KAAK,CAACgB,UAAU;EAAAC,QAAA,eAGbH,OAAA,CAACZ,GAAG;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAGO,CAAC,EACnBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;;AAED;AACA;AACA;AACApB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}